<Source> = (Line NewLine)* [Line];

<Line> = SourceLine | Whitespace;

<SourceLine> = [Whitespace] (Comment | Label | Statement);

Comment = <#";\s*"> #"[^\n]*";

Label = <"."> Identifier [Whitespace] ([Statement] | [Comment]);

Statement = Instruction [Whitespace] [Comment];

Instruction = Arithmetic | Move | Compare |
              Multiply | MultiplyAccumulate |
              Branch | SoftwareInterrupt | Swap |
              Load | Store | LoadMultiple | StoreMultiple;

Arithmetic         = ArithmeticOpcode [Condition] [Status] Whitespace
                     Register Separator
                     Register Separator
                     ShiftedRegisterOrImmediate;
Move               = MoveOpcode [Condition] [Status] Whitespace
                     Register Separator
                     ShiftedRegisterOrImmediate;
Compare            = CompareOpcode [Condition] Whitespace
                     Register Separator
                     ShiftedRegisterOrImmediate;
Branch             = BranchOpcode [Condition] Whitespace
                     Address;
SoftwareInterrupt  = "SWI" [Condition] Number;
Multiply           = "MUL" [Condition] [Status] Whitespace
                     Register Separator
                     Register Separator
                     Register;
MultiplyAccumulate = "MLA" [Condition] [Status] Whitespace
                     Register Separator
                     Register Separator
                     Register Separator
                     Register;
Load               = "LDR" [Condition] [Byte] [Translate] Whitespace
                     Register Separator
                     LoadStoreAddress;
Store              = "STR" [Condition] [Byte] [Translate] Whitespace
                     Register Separator
                     LoadStoreAddress;
Swap               = "SWP" [Condition] Whitespace
                     Register Separator
                     Register Separator
                     <"["> Register <"]">;
LoadMultiple       = "LDM" [Condition] MultipleType Whitespace
                     Register [WriteBack] Separator
                     RegisterList [Banked];
StoreMultiple      = "STM" [Condition] MultipleType Whitespace
                     Register [WriteBack] Separator
                     RegisterList [Banked];

MultipleType  = "IA" | "IB" | "DA" | "DB" | "FD" | "FA" | "ED" | "EA";
WriteBack     = <"!">;
Banked        = <"^">;
RegisterList  = <"{">
                (RegisterRange | Register)
                (Separator RegisterRange | Separator Register)*
                <"}">;
RegisterRange = Register <"-"> Register;

<ArithmeticOpcode> = "ADC" | "ADD" | "AND" | "BIC" | "EOR" | "ORR" | "RSB" |
                     "RSC" | "SBC" | "SUB";

<MoveOpcode>       = "MOV" | "MVN";

<CompareOpcode>    = "CMP" | "CMN" | "TST" | "TEQ";

<BranchOpcode>     = "B" | "BL";

Register = #"(R1[0-5])|(R[0-9])" | #"A[1-4]" | #"V[1-6]" |
           "SL" | "FP" | "IP" | "SP" | "LR" | "PC";

<ShiftedRegisterOrImmediate> = Register [Separator Shift] | Immediate;

<SignedShiftedRegisterOrImmediate> = [Sign] Register [Separator Shift] | Immediate | SignedImmediate;

Shift = ShiftWithArgument | "RRX";

<ShiftWithArgument> = ShiftType Whitespace (Immediate | Register);

<ShiftType> = "LSL" | "ASL" | "LSR" | "ASR" | "ROR";

Immediate = <"#"> Number;

SignedImmediate = <"#"> Sign Number;

Address = Number | Identifier;

<Number> = DecimalNumber | HexNumber;

Sign = "-" | "+";

Byte = <"B">;

Translate = <"T">;

LoadStoreAddress = <"[">
                   Register
                   (<"]"> |
                   Offset | PreIndexOffset | PostIndexOffset);
Offset           = Separator SignedShiftedRegisterOrImmediate <"]">;
PreIndexOffset   = Separator SignedShiftedRegisterOrImmediate <"]!">;
PostIndexOffset  = <"]"> Separator SignedShiftedRegisterOrImmediate;

DecimalNumber = #"\d+";

HexNumber = <"&"> #"[0-9A-F]+";

Condition = "EQ" | "NE" | "VS" | "VC" | "HI" | "LS" | "PL" | "MI" | "CS" |
            "CC" | "GE" | "GT" | "LE" | "LT";

Status = <"S">;

Identifier = #"[A-Za-z_][A-Za-z0-9_-]*";

<Separator> = <","> Whitespace;

<Whitespace> = <#"\s*">;

<NewLine> = <"\n">
